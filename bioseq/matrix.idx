Matrix	bioseq/matrix.html#Matrix	matrix: Matrix	
newMatrix	bioseq/matrix.html#newMatrix,int,int	matrix: newMatrix[T](rows, cols: int): Matrix[T]	
newMatrix	bioseq/matrix.html#newMatrix,int,int,seq[T]	matrix: newMatrix[T](rows, cols: int; data: seq[T]): Matrix[T]	
dim	bioseq/matrix.html#dim,Matrix[T]	matrix: dim[T](m: Matrix[T]): (int, int)	
rows	bioseq/matrix.html#rows,Matrix[T]	matrix: rows[T](m: Matrix[T]): int	
cols	bioseq/matrix.html#cols,Matrix[T]	matrix: cols[T](m: Matrix[T]): int	
`[]`	bioseq/matrix.html#[],Matrix[T],int,int	matrix: `[]`[T](m: Matrix[T]; row, col: int): T	
`[]`	bioseq/matrix.html#[],Matrix[T],int,int_2	matrix: `[]`[T](m: var Matrix[T]; row, col: int): var T	
`[]=`	bioseq/matrix.html#[]=,Matrix[T],int,int,T	matrix: `[]=`[T](m: var Matrix[T]; row, col: int; s: T)	
toString	bioseq/matrix.html#toString,Matrix[T]	matrix: toString[T](m: Matrix[T]): string	
`$`	bioseq/matrix.html#$,Matrix[T]	matrix: `$`[T](m: Matrix[T]): string	
stack	bioseq/matrix.html#stack,varargs[Matrix[T]]	matrix: stack[T](matrices: varargs[Matrix[T]]): Matrix[T]	
concat	bioseq/matrix.html#concat,varargs[Matrix[T]]	matrix: concat[T](matrices: varargs[Matrix[T]]): Matrix[T]	
